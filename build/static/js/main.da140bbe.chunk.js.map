{"version":3,"sources":["Home.js","SurvivalModel.js","SurvivalData.js","SurvivalSummary.js","SurvivalCases.js","Survival.js","SurvivalDetails.js","App.js","serviceWorker.js","index.js"],"names":["Home","SurvivalModel","className","SurvivalData","SurvivalSummary","SurvivalCases","capitalizeFirstLetter","string","charAt","toUpperCase","slice","data","useMemo","patient_id","date","name","gender","birthday","prognosis","columns","Header","id","accessor","originalRow","rowIndex","moment","format","fromNow","isPositive","link","String","to","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","Survival","SurvivalDetails","useParams","App","useState","isOpen","toggleOpen","src","alt","onClick","type","viewBox","path","fillRule","d","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.da140bbe.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n  return <h2>Welcome to the homepage!</h2>\n};\n\nexport default Home;\n","import React from 'react';\n\nconst SurvivalModel = () => {\n  return (\n    <div className=\"flex-1 bg-gray-100 p-4 mb-4 sm:mb-0 sm:mr-2 rounded-md shadow-md\">\n      <h2 className=\"border-b border-gray-500 text-lg font-medium\">Model</h2>\n      <div className=\"flex flex-wrap content-start mt-2 text-base\">\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Developed by</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">Felix Peters Consulting</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Version</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">0.1.0</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Release date</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">2020-07-01</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Intended use</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">Decision support for survival prognosis</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Target group</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">Physicians</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Task</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Algorithm</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Performance</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">AUC X.XX<br/>Precision XX.X%<br/>Recall XX.X%</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SurvivalModel;\n","import React from 'react';\n\nconst SurvivalData = () => {\n  return (\n    <div className=\"flex-1 bg-gray-100 p-4 rounded-md shadow-md\">\n      <h2 className=\"border-b border-gray-500 text-lg font-medium\">Data</h2>\n      <div className=\"flex flex-wrap content-start mt-2 text-base\">\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Data type</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">Tabular</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Source</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Timeframe</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Size</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">XXX training examples<br/>XXX test examples</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Features</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Preprocessing</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n        <div className=\"w-full md:w-1/3 font-semibold py-1\">Privacy implications</div>\n        <div className=\"w-full md:w-2/3 md:py-1\">tbd</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SurvivalData;\n","import React from 'react';\nimport SurvivalModel from './SurvivalModel';\nimport SurvivalData from './SurvivalData';\nimport SurvivalStatistics from './SurvivalStatistics';\n\nconst SurvivalSummary = () => {\n  return (\n    <div className=\"flex flex-col sm:flex-row m-4 items-stretch justify-center text-gray-700\">\n      <SurvivalModel />\n      <SurvivalData />\n    </div>\n  );\n};\n\nexport default SurvivalSummary;\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTable } from 'react-table';\nimport moment from 'moment';\n\nconst SurvivalCases = () => {\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const data = useMemo(\n    () => [\n      {\n        patient_id: '001',\n        date: '2020-05-01',\n        name: 'John Doe',\n        gender: 'male',\n        birthday: '1959-10-23',\n        prognosis: 'positive',\n      },\n      {\n        patient_id: '002',\n        date: '2020-06-17',\n        name: 'Jane Doe',\n        gender: 'female',\n        birthday: '1989-04-10',\n        prognosis: 'negative',\n      },\n      {\n        patient_id: '003',\n        date: '2020-07-02',\n        name: 'Peter Smith',\n        gender: 'male',\n        birthday: '2003-08-03',\n        prognosis: 'negative',\n      },\n    ],\n    []\n  );\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Date',\n        id: 'Date',\n        accessor: (originalRow, rowIndex) => { \n          return moment(originalRow.date, \"YYYY-MM-DD\").format('L'); \n        },\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'Gender',\n        id: 'Gender',\n        accessor: (originalRow, rowIndex) => { return capitalizeFirstLetter(originalRow.gender); },\n      },\n      {\n        Header: 'Birthday',\n        id: 'Birthday',\n        accessor: (originalRow, rowIndex) => { \n          const birthday = moment(originalRow.birthday, \"YYYY-MM-DD\");\n          return birthday.format('L') + ' (age ' + birthday.fromNow(true) + ')'; \n        },\n      },\n      {\n        Header: 'Prognosis',\n        id: 'Prognosis',\n        accessor: (originalRow, rowIndex) => { \n          const prognosis = originalRow.prognosis;\n          const isPositive = prognosis === 'positive';\n          return (\n            <span className={`px-2 inline-flex text-sm rounded-full ${isPositive ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'}`}>\n            {capitalizeFirstLetter(prognosis)}\n            </span>\n          );\n        },\n      },\n      {\n        id: 'Link',\n        accessor: (originalRow, rowIndex) => { \n          const link = '/survival/details/' + String(originalRow.patient_id); \n          return (\n            <Link to={link} className=\"text-right text-indigo-600 hover:text-indigo-900\">Details</Link>\n          );\n        },\n      }\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data });\n\n  return (\n    <div className=\"bg-gray-100 p-4 mx-4 mb-4 rounded-md shadow-md text-gray-700\">\n      <h2 className=\"border-b border4-gray-500 text-lg font-medium\">Cases</h2>\n      <div className=\"flex flex-col mt-2\">\n        <div className=\"-my-2 py-2 overflow-x-auto sm:-mx-6 sm:px-6 lg:-mx-8 lg:px-8\">\n          <div className=\"align-middle inline-block min-w-full shadow overflow-hidden sm:rounded-lg border-b border-gray-200\">\n            <table {...getTableProps()} className=\"min-w-full\">\n              <thead>\n              {\n                headerGroups.map(headerGroup => (\n                  <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => ( \n                    <th {...column.getHeaderProps()} className=\"px-6 py-3 border-b border-gray-200 bg-gray-200 text-left text-sm leading-4 font-medium text-gray-600 uppercase tracking-wider\">\n                    {column.render('Header')}\n                    </th>\n                  ))}\n                  </tr>\n                ))\n              }\n              </thead>\n              <tbody {...getTableBodyProps()} className=\"bg-white\">\n              {\n                rows.map(row => {\n                  prepareRow(row)\n                  return (\n                    <tr {...row.getRowProps()}>\n                    {row.cells.map(cell => {\n                      return <td {...cell.getCellProps()} className=\"px-6 py-4 whitespace-no-wrap border-b border-gray-200 text-md leading-5 text-gray-600\">\n                        {cell.render('Cell')}\n                        </td>\n                    })}\n                    </tr>\n                  )\n                })\n              }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SurvivalCases;\n","import React from 'react';\nimport SurvivalSummary from './SurvivalSummary';\nimport SurvivalCases from './SurvivalCases';\n\nconst Survival = () => {\n  return (\n    <div className=\"flex flex-col bg-gray-300\">\n      <div className=\"bg-gray-100 shadow-md\">\n        <h1 className=\"font-semibold text-2xl px-4 py-4\">Project: Survival Analysis</h1>\n      </div>\n      <SurvivalSummary/>\n      <SurvivalCases />\n    </div>\n  );\n};\n\nexport default Survival;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SurvivalDetails = () => {\n  let { id } = useParams();\n\n  return (\n    <h1>Survival details for patient {id}</h1>\n  );\n}\n\nexport default SurvivalDetails;\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from './Home';\nimport Survival from './Survival';\nimport SurvivalDetails from './SurvivalDetails';\nimport './App.css';\n\nconst App = () => {\n\n  const [isOpen, toggleOpen] = useState(false);\n\n  return (\n      <Router>\n        <header className=\"bg-gray-900 sm:flex sm:justify-between sm:items-center sm:px-4 sm:py-3\">\n          <div className=\"flex items-center justify-between px-4 py-3 sm:p-0\">\n            <div>\n              <img src=\"./fpc_logo.png\" className=\"h-12 sm:h-20\" alt=\"Felix Peters Consulting\"/>\n            </div>\n            <div className=\"sm:hidden\">\n              <button onClick={() => toggleOpen(!isOpen)} type=\"button\" className=\"block text-gray-500 hover:text-white focus:text-white focus:outline-none\">\n                <svg className=\"h-8 w-8 fill-current\" viewBox=\"0 0 24 24\">\n                  {isOpen\n                    ? <path path fillRule=\"evenodd\" d=\"M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z\"/> \n                    : <path fillRule=\"evenodd\" d=\"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"/>\n                  }\n                </svg>\n              </button>\n            </div>\n          </div>\n          <nav className={`${isOpen ? 'block' : 'hidden'} px-2 pb-4 pt-2 sm:flex sm:p-0`}>\n            <Link to=\"/\" className=\"block text-lg text-white rounded px-2 py-1 hover:bg-gray-800\">Home</Link>\n            <Link to=\"/survival\" className=\"block mt-1 text-lg text-white rounded px-2 py-1 hover:bg-gray-800 sm:mt-0\">Survival Analysis</Link>\n          </nav>\n        </header>\n        <Switch>\n          <Route path=\"/survival/details/:id\">\n            <SurvivalDetails />\n          </Route>\n          <Route path=\"/survival\">\n            <Survival />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n        <footer className=\"bg-gray-900 flex flex-col sm:flex-row sm:justify-between items-center px-4 py-3\">\n          <div className=\"text-white text-sm font-thin\">Social icons</div>\n          <div className=\"text-white text-sm font-thin\">&copy; 2020 by Felix Peters. All rights reserved.</div>\n        </footer>\n      </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.generated.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}